<?php

// This file is auto-generated, don't edit it. Thanks.

namespace AlibabaCloud\SDK\Sas\V20181203\Models\DescribeNoticeConfigResponseBody;

use AlibabaCloud\Tea\Model;

class noticeConfigList extends Model
{
    /**
     * @description The ID of the user.
     *
     * @example 12123414****
     *
     * @var int
     */
    public $aliUid;

    /**
     * @description The page number of the returned page.
     *
     * @example 1
     *
     * @var int
     */
    public $currentPage;

    /**
     * @description The identifier of the notification item. Valid values:
     *
     *   **yundun\_security_Weekreport**: notification for vulnerabilities
     *   **yundun\_sas\_antiransomware_task**: notification for results of restoration tasks
     *   **sas_healthcheck**: notification for baseline checks
     *   **sas_suspicious**: notification for alerts generated by Security Center
     *   **yundun\_aegis\_AV_true**: notification for precision defense
     *   **yundun\_sas\_ak_leakage**: notification for AccessKey pair leaks
     *   **yundun\_sas\_config_alert**: notification for configuration assessment
     *   **yundun\_sas\_vul_Emergency**: notification for urgent vulnerabilities
     *   **yundun\_webguard_event**: notification for web tamper proofing
     *   **yundun\_sas\_cloud\_native_firewall**: notification for alerts generated by the container firewall feature
     *   **yundun\_sas\_cloud\_native\_firewall_Defense**: notification for proactive defense implemented by the container firewall feature
     *   **yundun\_IP_Blocking**: notification for blocked brute-force attacks initiated from malicious IP addresses
     *   **yundun\_sas\_anti\_virus_config**: notification for virus scan
     *   **yundun\_sas_log**: notification for excess logs
     *   **yundun\_honeypot_alarm**: notification for alerts generated by the honeypot feature
     *   **aliyun\_rasp_alarm**: notification for alerts generated by the application security feature
     *   **virusScheduleTask**: notification for completion of scheduled virus scans
     *   **yundun\_anti_Virus**: notification that no security checks are performed
     *   **sas_vulnerability**: notification for vulnerabilities
     *   **weeklyreport**: notification for weekly reports
     *   **agent**: notification that the Security Center agent is offline
     *   **bruteforcesuccess**: notification for protection against brute-force attacks
     *   **webshell**: notification for webshells
     *   **suspicious**: notification for alerts generated by Server Guard
     *   **patch**: deprecated
     *   **remotelogin**: notification for remote logons
     *   **health**: notification for security checks
     *   **yundun\_sas\_cloudsiem_log**: notifications of insufficient threat analysis log capacity
     *
     * > If the value is **yundun\_security_Weekreport**, weekly reports are sent to notify you of unhandled vulnerabilities.
     * @example sas_suspicious
     *
     * @var string
     */
    public $project;

    /**
     * @description The notification method. Valid values:
     *
     *   **1**: text message
     *   **2**: email
     *   **4**: internal message
     *   **3**: text message and email
     *   **5**: text message and internal message
     *   **6**: email and internal message
     *   **7**: text message, email, and internal message
     *
     * @example 7
     *
     * @var int
     */
    public $route;

    /**
     * @description The time period during which Security Center sends notifications. Valid values:
     *
     *   **0**: any time
     *   **1**: 08:00 to 22:00
     *
     * @example 1
     *
     * @var int
     */
    public $timeLimit;
    protected $_name = [
        'aliUid'      => 'AliUid',
        'currentPage' => 'CurrentPage',
        'project'     => 'Project',
        'route'       => 'Route',
        'timeLimit'   => 'TimeLimit',
    ];

    public function validate()
    {
    }

    public function toMap()
    {
        $res = [];
        if (null !== $this->aliUid) {
            $res['AliUid'] = $this->aliUid;
        }
        if (null !== $this->currentPage) {
            $res['CurrentPage'] = $this->currentPage;
        }
        if (null !== $this->project) {
            $res['Project'] = $this->project;
        }
        if (null !== $this->route) {
            $res['Route'] = $this->route;
        }
        if (null !== $this->timeLimit) {
            $res['TimeLimit'] = $this->timeLimit;
        }

        return $res;
    }

    /**
     * @param array $map
     *
     * @return noticeConfigList
     */
    public static function fromMap($map = [])
    {
        $model = new self();
        if (isset($map['AliUid'])) {
            $model->aliUid = $map['AliUid'];
        }
        if (isset($map['CurrentPage'])) {
            $model->currentPage = $map['CurrentPage'];
        }
        if (isset($map['Project'])) {
            $model->project = $map['Project'];
        }
        if (isset($map['Route'])) {
            $model->route = $map['Route'];
        }
        if (isset($map['TimeLimit'])) {
            $model->timeLimit = $map['TimeLimit'];
        }

        return $model;
    }
}
